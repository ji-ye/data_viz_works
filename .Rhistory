View(project1.dta)
read.dta(project1.dta)
project1.dta <- read.dta
describe project1.dta
View(project1.dta)
project1 <- read.table("~/Desktop/project1.dta", quote="\"")
View(project1)
View(project1)
View(project1.dta)
View(project1)
print(project1)
describe(project1)
View(project1)
library(haven)
PP346_injunction_data <- read_dta("~/Desktop/PP346_injunction_data.dta")
View(PP346_injunction_data)
attr(PP346_injunction_data, "variable.labels")
install.packages(readr, haven, dplyr, tidyr, stringr, ggplot2)
install.packages(readr, haven, dp1yr, tidyr, stringr, ggplot2)
install.packages(readr, haven, tidyr, stringr, ggplot2)
install.packages(readr, haven, stringr, ggplot2)
install.packages(stringr)
installed.packages()
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
install.packages("ggplot2")
library(haven)
library(haven, readr, dplyr, tidyr, stringr, ggplot2)
library(tidyr)
![](".output/week3_graph5_source.png")
getwd()
setwd(./Github/data_viz_works)
setwd(/Github/data_viz_works)
setwd("./GitHub/data_viz_works/")
![]("./output/week3_graph5_source.png")
![]("./output/week3_graph5_source.png")
?plot.margin
?theme
library(easypackages)
packages("anytime","tidyverse","rmarkdown","readr", "haven", "dplyr", "stringr", "ggplot2",
"xts", "igraph", "countrycode", "extrafont", "waffle", "maps")
?theme
theme_map_short <- theme_jiye + theme(panel.grid.major.y = element_blank(),
plot.subtitle = element_text(size=12),
axis.title.y = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.margin = unit(c(5,0,0,0), "pt"))
theme_jiye <- theme(panel.grid.major.y =element_line( size=.1, color="#999999"),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=24,
family = "Helvetica",
colour = "#3a3a3a",
face = "bold"),
plot.subtitle = element_text(size=10,
family = "Avenir",
colour = "#666666"),
axis.title.y = element_text(colour="#325a8c"),
axis.title.x = element_blank(),
axis.text.y = element_text(colour="#325a8c"),
axis.text.x = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.caption = element_text(size=8,
family = "Avenir",
colour = "#666666",
hjust = 0
),
plot.margin = unit(c(0,0,0,0), "cm"))
theme_map_short <- theme_jiye + theme(panel.grid.major.y = element_blank(),
plot.subtitle = element_text(size=12),
axis.title.y = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.margin = unit(c(5,0,0,0), "pt"))
nodes = read_csv("./data/20171021_nodes.csv")
nodes <- mutate(nodes, country = countrycode(country_code,
origin="iso2c",
destination = "country.name.en"))
mp <- NULL
mapWorld <- borders("world", colour="#FFFFFF", fill='grey75', alpha=0.6,
ylim = c(-50, 70)) # create a layer of borders
mp <- ggplot() + mapWorld
# layer the cities on top
mp <- mp+ geom_point(aes(x=nodes$longitude, y=nodes$latitude) ,color="#fe5346", size=0.75, alpha=.25) +
geom_path(aes(x=nodes$longitude, y=nodes$latitude), color="#FF9900", size=.1, alpha=0.025,
linejoin = "bevel") +
ggtitle("Global Nodes Distribution",
subtitle = "is uneven across continents") +
labs(caption = "Source: BitNodes API") +
theme_map_short
mp
theme_map_short
theme_map <- theme(panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=24,
family = "Helvetica",
colour = "#3a3a3a",
face = "bold"),
plot.subtitle = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
plot.caption = element_text(size=8,
family = "Avenir",
colour = "#666666",
hjust = 0
),
plot.margin = unit(c(1,0,0,0), "cm"))
mp <- NULL
mapWorld <- borders("world", colour="#FFFFFF", fill='grey75', alpha=0.6,
ylim = c(-50, 70)) # create a layer of borders
mp <- ggplot() + mapWorld
# layer the cities on top
mp <- mp+ geom_point(aes(x=nodes$longitude, y=nodes$latitude) ,color="#fe5346", size=0.75, alpha=.25) +
geom_path(aes(x=nodes$longitude, y=nodes$latitude), color="#FF9900", size=.1, alpha=0.025,
linejoin = "bevel") +
ggtitle("Global Nodes Distribution",
subtitle = "is uneven across continents") +
labs(caption = "Source: BitNodes API") +
theme_map
mp
theme_map_short <- theme_jiye + theme(panel.grid.major.y = element_blank(),
plot.subtitle = element_text(size=12),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
plot.margin = unit(c(5,0,0,0), "pt"))
mp <- NULL
mapWorld <- borders("world", colour="#FFFFFF", fill='grey75', alpha=0.6,
ylim = c(-50, 70)) # create a layer of borders
mp <- ggplot() + mapWorld
# layer the cities on top
mp <- mp+ geom_point(aes(x=nodes$longitude, y=nodes$latitude) ,color="#fe5346", size=0.75, alpha=.25) +
geom_path(aes(x=nodes$longitude, y=nodes$latitude), color="#FF9900", size=.1, alpha=0.025,
linejoin = "bevel") +
ggtitle("Global Nodes Distribution",
subtitle = "is uneven across continents") +
labs(caption = "Source: BitNodes API") +
theme_map_short
mp
theme_jiye <- theme(panel.grid.major.y = element_line( size=.1, color="#999999"),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=24,
family = "Helvetica",
colour = "#3a3a3a",
face = "bold"),
plot.subtitle = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.title.y = element_text(colour="#325a8c"),
axis.title.x = element_blank(),
axis.text.y = element_text(colour="#325a8c"),
axis.text.x = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.caption = element_text(size=8,
family = "Avenir",
colour = "#666666",
hjust = 0),
plot.margin = unit(c(0,0,0,0), "pt")
)
theme_map_short <- theme_jiye + theme(panel.grid.major.y = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
plot.margin = unit(c(5,0,0,0), "pt")
)
theme_percBar_short <- theme_jiye + theme(panel.grid.major.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(hjust = 1,
size = 10),
axis.line.x = element_line(),
plot.caption = element_text(size = 12),
plot.margin = unit(c(0, 5, 0, 5), "pt")
)
perc_bar <- ggplot(data = top_country_nodes, aes(x="", y = node, fill=factor(country))) +
geom_bar(stat='identity', position = position_stack(reverse = TRUE), width=.75, colour="white") +
coord_flip() +
scale_fill_manual(values=nation_cols2) + theme_percBar_short
top_country_nodes = read_csv("./data/country_list_topOnly.csv")
perc_bar <- ggplot(data = top_country_nodes, aes(x="", y = node, fill=factor(country))) +
geom_bar(stat='identity', position = position_stack(reverse = TRUE), width=.75, colour="white") +
coord_flip() +
scale_fill_manual(values=nation_cols2) + theme_percBar_short
perc_bar + scale_y_continuous(name="",labels=c("0%", "USA\n29.62%", "Germany\n17.16%", "France\n6.65%", "Netherlands\n5.19%", "China\n5.11%", "< Countries with over 100 nodes", "Rest of the World\n13.97%"),
breaks = (c(0, 2962, (2962+1716), (2962+1716+665), (2962+1716+665+519), (2962+1716+665+519+511),9973-1397,
sum(top_country_nodes$node))),
expand=c(0,0)
) +
labs(caption = "Source: BitNodes") +
ggtitle("Block Chain Network is Distributed",
subtitle = " in high GDP countries, with the Middle East underrepresented")
top_country_nodes$country <- factor(top_country_nodes$country, levels = top_country_nodes$country)
nation_cols2 <- c(
"#93B7BE","#584F50","#b3906a","#FF991C",'#fb4d3d',
"#999999","#999999","#999999","#999999","#999999",
"#999999","#999999","#999999","#999999","#999999",
"#dddddd"
)
perc_bar <- ggplot(data = top_country_nodes, aes(x="", y = node, fill=factor(country))) +
geom_bar(stat='identity', position = position_stack(reverse = TRUE), width=.75, colour="white") +
coord_flip() +
scale_fill_manual(values=nation_cols2) + theme_percBar_short
perc_bar + scale_y_continuous(name="",labels=c("0%", "USA\n29.62%", "Germany\n17.16%", "France\n6.65%", "Netherlands\n5.19%", "China\n5.11%", "< Countries with over 100 nodes", "Rest of the World\n13.97%"),
breaks = (c(0, 2962, (2962+1716), (2962+1716+665), (2962+1716+665+519), (2962+1716+665+519+511),9973-1397,
sum(top_country_nodes$node))),
expand=c(0,0)
) +
labs(caption = "Source: BitNodes") +
ggtitle("Block Chain Network is Distributed",
subtitle = " in high GDP countries, with the Middle East underrepresented")
perc_bar + scale_y_continuous(name="",labels=c("0%", "USA\n29.62%", "Germany\n17.16%", "France\n6.65%", "Netherlands\n5.19%", "China\n5.11%", "< Countries with over 100 nodes", "Rest of the World\n13.97%"),
breaks = (c(0, 2962, (2962+1716), (2962+1716+665), (2962+1716+665+519), (2962+1716+665+519+511),9973-1397,
sum(top_country_nodes$node))),
expand=c(0,0)
) +
labs(caption = "Source: BitNodes") +
ggtitle("Block Chain Network is Distributed",
subtitle = " in high GDP countries, with the Middle East underrepresented") + theme(aspect.ratio = 0.05)
theme_volume_short <- theme_jiye + theme(
axis.title.y = element_text(colour="#666666"),
axis.text.y = element_text(colour="#666666"),
)
coinbase = read_csv("./data/coinbaseUSD.csv")
colnames(coinbase) = c("unix_timestamp", "price", "volume_btc")
# Convert unix timestamp to human-readable date & time
coinbase <- mutate(coinbase, unix_timestamp = anytime(unix_timestamp))
coinbase <- mutate(coinbase, volume_usd = volume_btc * price)
# sample down to 1 percent
coinbase_lim <- sample_frac(coinbase, size = 0.01)
ts <- xts(coinbase_lim$volume_usd, as.Date(coinbase_lim$unix_timestamp, "%Y-%m-%d"))
ts_d = apply.daily(ts, FUN=sum)
#ts_m = apply.monthly(ts_d, FUN=sum)
df_d <- data.frame(date=index(ts_d), coredata(ts_d))
colnames(df_d) <- c("date", "volume_usd")
ts_btc <- xts(coinbase_lim$volume_btc, as.Date(coinbase_lim$unix_timestamp, "%Y-%m-%d"))
ts_d_btc = apply.daily(ts_btc, FUN=sum)
#ts_m_btc = apply.monthly(ts_d_btc, FUN=sum)
df_d_btc <- data.frame(date=index(ts_d_btc), coredata(ts_d_btc))
colnames(df_d_btc) <- c("date", "volume_btc")
df <- left_join(df_d, df_d_btc)
df_btc <- df[, c("date", "volume_btc")]
df_btc$unit <- "Bitcoin"
colnames(df_btc) <- c("date", "volume", "unit")
df_usd <- df[, c("date", "volume_usd")]
df_usd <- mutate(df_usd, volume_usd = volume_usd/1000)
df_usd$unit <- "Thousand USD"
colnames(df_usd) <- c("date", "volume", "unit")
agg <- rbind(df_btc, df_usd)
soc <- read_csv("./data/soc-sign-bitcoinotc.csv", col_names = c("rater", "ratee", "score", "rate_timestamp"))
#   graph five data
links <- read_tsv("./data/lt_graph_ELTE.txt", col_names = c("sender", "recipient", "transaction_timestamp"))
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") + theme_volume_short
heatmap
theme_volume_short <- theme_jiye + theme(
axis.title.y = element_text(colour="#666666"),
axis.text.y = element_text(colour="#666666"),
axis.title.x = element_text(size=12,
family = "Avenir",
colour = "#666666")
)
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") + theme_volume_short
heatmap
theme_volume_short <- theme_jiye + theme(
axis.title.y = element_text(colour="#666666"),
axis.text.y = element_text(colour="#666666"),
axis.title.x = element_text(size=12,
family = "Avenir",
colour = "#666666"),
legend.position = c(0,0)
)
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") + theme_volume_short
heatmap
theme_volume_short <- theme_jiye + theme(
axis.title.y = element_text(colour="#666666"),
axis.text.y = element_text(colour="#666666"),
axis.title.x = element_text(size=12,
family = "Avenir",
colour = "#666666"),
legend.position = c(0,0.95)
)
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") + theme_volume_short
heatmap
theme_volume_short <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
axis.title.y = element_text(colour="#666666"),
axis.text.y = element_text(colour="#666666"),
axis.title.x = element_text(size=12,
family = "Avenir",
colour = "#666666"),
legend.position = c(0.1, 0.9)
)
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") + theme_volume_short
haetmap
heatmap
theme_volume_short <- theme_jiye + theme(
axis.title.y = element_text(colour="#666666"),
axis.text.y = element_text(colour="#666666"),
axis.title.x = element_text(size=12,
family = "Avenir",
colour = "#666666")
)
area <- ggplot(data=agg, aes(x = as.POSIXct(date), y = volume, fill = as.factor(unit))) +
geom_area(position = "stack") +
scale_x_datetime(date_breaks = "3 months", expand=c(0,0)) +
scale_y_continuous(breaks = c(0, 250, 500, 750, 1000, 2000, 3000)) +
scale_fill_manual(values = alpha(c("#FF9900", "#85bb65")), 0.2) +
ggtitle("Bitcoin Daily Trading Volume",
subtitle = "in number of bitcoin & Thousands of USD") +
labs(caption = "Source: Coinbase API",
x = "",
y = "Volume") + theme_volume_short
area
theme_heatmap_short <- theme_jiye + theme(
aspect.ratio = 1,
axis.title.y = element_text(colour = "#666666"),
axis.text.y = element_text(colour = "#666666"),
legend.position = c(0.1, 0.9)
)
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") + theme_heatmap_short
heatmap
theme_heatmap_short <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
aspect.ratio = 1,
axis.title.y = element_text(colour = "#666666"),
axis.text.y = element_text(colour = "#666666"),
legend.position = c(0.1, 0.9)
)
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") + theme_heatmap_short
heatmap
theme_jiye <- theme(
panel.grid.major.y = element_line(size = .1, color = "#999999"),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=24,
family = "Helvetica",
colour = "#3a3a3a",
face = "bold"),
plot.subtitle = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.title.y = element_text(colour="#325a8c"),
axis.title.x = element_blank(),
axis.text.y = element_text(colour="#325a8c"),
axis.text.x = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.caption = element_text(size=8,
family = "Avenir",
colour = "#666666",
hjust = 0),
plot.margin = unit(c(0,0,0,0), "pt")
)
theme_map <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
plot.margin = unit(c(5,0,0,0), "pt")
)
theme_percBar <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
aspect_ratio = 0.05,
axis.title.y = element_blank(),
axis.text.x = element_text(hjust = 1,
size = 10),
axis.line.x = element_line(),
plot.caption = element_text(size = 12),
plot.margin = unit(c(0, 5, 0, 5), "pt")
)
theme_volume <- theme_jiye + theme(
axis.title.y = element_text(colour = "#666666"),
axis.text.y = element_text(colour = "#666666"),
axis.title.x = element_text(size = 12,
family = "Avenir",
colour = "#666666")
)
theme_heatmap <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
aspect.ratio = 1,
axis.title.y = element_text(colour = "#666666"),
axis.text.y = element_text(colour = "#666666"),
legend.position = c(0.1, 0.9)
)
theme_jiye <- theme(
panel.grid.major.y = element_line(size = .1, color = "#999999"),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=24,
family = "Helvetica",
colour = "#3a3a3a",
face = "bold"),
plot.subtitle = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.title.y = element_text(colour="#325a8c"),
axis.title.x = element_blank(),
axis.text.y = element_text(colour="#325a8c"),
axis.text.x = element_text(size=12,
family = "Avenir",
colour = "#666666"),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.caption = element_text(size=8,
family = "Avenir",
colour = "#666666",
hjust = 0),
plot.margin = unit(c(0,0,0,0), "pt")
)
theme_map <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
plot.margin = unit(c(5,0,0,0), "pt")
)
theme_percBar <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
aspect.ratio = 0.05,
axis.title.y = element_blank(),
axis.text.x = element_text(hjust = 1,
size = 10),
axis.line.x = element_line(),
plot.caption = element_text(size = 12),
plot.margin = unit(c(0, 5, 0, 5), "pt")
)
theme_volume <- theme_jiye + theme(
axis.title.y = element_text(colour = "#666666"),
axis.text.y = element_text(colour = "#666666"),
axis.title.x = element_text(size = 12,
family = "Avenir",
colour = "#666666")
)
theme_heatmap <- theme_jiye + theme(
panel.grid.major.y = element_blank(),
aspect.ratio = 1,
axis.title.y = element_text(colour = "#666666"),
axis.text.y = element_text(colour = "#666666"),
legend.position = c(0.1, 0.9)
)
perc_bar <- ggplot(data = top_country_nodes, aes(x="", y = node, fill=factor(country))) +
geom_bar(stat='identity', position = position_stack(reverse = TRUE), width=.75, colour="white") +
coord_flip() +
scale_fill_manual(values=nation_cols2) +
theme_percBar
perc_bar + scale_y_continuous(name="",labels=c("0%", "USA\n29.62%", "Germany\n17.16%", "France\n6.65%", "Netherlands\n5.19%", "China\n5.11%", "< Countries with over 100 nodes", "Rest of the World\n13.97%"),
breaks = (c(0, 2962, (2962+1716), (2962+1716+665), (2962+1716+665+519), (2962+1716+665+519+511),9973-1397,
sum(top_country_nodes$node))),
expand=c(0,0)
) +
labs(caption = "Source: BitNodes") +
ggtitle("Block Chain Network is Distributed",
subtitle = " in high GDP countries, with the Middle East underrepresented")
heatmap <- ggplot(soc, aes(x=rater, y=ratee, fill=score)) + geom_tile() +
scale_fill_distiller(type="div", palette = "RdYlBu") +
ggtitle("The trust nework of Bitcoin traders",
subtitle = "is sparse and unregulated") +
labs(caption = "Source: Bitcoin OTC trust network by Stanford University") +
theme_heatmap
heatmap
