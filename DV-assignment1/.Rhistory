sasdata <- read.xport("C:/temp/sasfile.xpt")
help(dta)
help(??dta)
install.packages("foreign")
library(foreign)
library(foreign)
help(package=foreign)
help(package=foreign)
wd
pwd
ls
read.dta
read.dta
project1.dta <- read.dta
print project1.dta
print(project1.dta)
View(project1.dta)
View(project1.dta)
View(project1.dta)
View(project1.dta)
read.dta(project1.dta)
project1.dta <- read.dta
describe project1.dta
View(project1.dta)
project1 <- read.table("~/Desktop/project1.dta", quote="\"")
View(project1)
View(project1)
View(project1.dta)
View(project1)
print(project1)
describe(project1)
View(project1)
library(haven)
PP346_injunction_data <- read_dta("~/Desktop/PP346_injunction_data.dta")
View(PP346_injunction_data)
attr(PP346_injunction_data, "variable.labels")
install.packages(readr, haven, dplyr, tidyr, stringr, ggplot2)
install.packages(readr, haven, dp1yr, tidyr, stringr, ggplot2)
install.packages(readr, haven, tidyr, stringr, ggplot2)
install.packages(readr, haven, stringr, ggplot2)
install.packages(stringr)
installed.packages()
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
install.packages("ggplot2")
library(haven)
library(haven, readr, dplyr, tidyr, stringr, ggplot2)
library(tidyr)
library(tidyr)
install.packages(readr, haven, dplyr, tidyr, stringr, ggplot2)
install.packages("dplyr")
install.packages(readr, haven, tidyr, stringr, ggplot2)
install.packages("tidyr")
install.packages(readr, haven, stringr, ggplot2)
library(readr, haven, dplyr, tidyr, stringr, ggplot2)
library(tidyr)
library(readr, haven, dplyr, stringr, ggplot2)
library(readr, haven, dplyr, ggplot2)
library(readr, haven, dplyr)
x <- c("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
require(x)
lapply(x, require, character.only = TRUE)
do.call("require", x)
install.packages("easypackages")
x <- c("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
require(x)
lapply(x, require, character.only = TRUE)
do.call("require", x)
library(readr, haven, dplyr, tidyr, stringr, ggplot2)
library("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
libraries("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
library(easypackages)
libraries("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
library(readr)
packages("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
libraries("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
packages("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
ls()
getwd()
setwd("./Github/data_viz_works/")
getwd()
"/Users/apple/GitHub/data_viz_works" + "/dasfa"
paste("/Users/apple/GitHub/data_viz_works", "/dasfa")
paste("/Users/apple/GitHub/data_viz_works", "/dasfa", sep="")
paste(getwd(), sep="")
acc2014 <- read.csv(paste(getwd(), sep=""))
fn = paste(getwd(), sep="")
fn
ls()
dir()
dir()[[1]]
read_csv(dir()[[1]])
acc2015 <- read.csv(dir()[[1]])
acc2014 <- read.csv(dir()[[2]])
ls()
acc2015
acc2014 <- read.csv(dir()[[2]])
dir()[[2]]
class(acc2015)
acc2015 <- read_csv(dir()[[1]])
acc2014 <- read_sas(dir()[[2]])
ls()
acc2014
class(acc2014)
class(acc2015)
dir()
table(is.na(acc2014$TWAY_ID2))
?mutate
?na_if()
?mutate
muate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
mutate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
head.acc2014$TWAY_ID2
head.(acc2014$TWAY_ID2)
acc2014$TWAY_ID2
head(acc2014$TWAY_ID2)
na_if(acc2014$TWAY_ID2, ""
)
mutate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
na_col <- na_if(acc2014$TWAY_ID2, "")
mutate(acc2014, TWAY_ID2 = na_col)
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
acc2014$TWAY_ID2
na_col
table(is.na(na_col))
mutate(acc2014, TWAY_ID2 <- na_col)
table(is.na(acc2014$TWAY_ID2))
acc2014 <- mutate(acc2014, TWAY_ID2 <- na_col)
table(is.na(acc2014$TWAY_ID2))
acc2014
acc2014 %>% mutate(na_if(acc2014$TWAY_ID2, ""))
table(is.na(acc2014 %>% mutate(na_if(acc2014$TWAY_ID2, "")))
)
acc2014
table(is.na(acc2014 %>% mutate(acc2014$atway_ID2, na_if(acc2014$TWAY_ID2, "")))
)
table(is.na(acc2014 %>% mutate(acc2014$TWAY_ID2, na_if(acc2014$TWAY_ID2, ""))))
table(is.na(acc2014 %>% mutate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))))
acc2014 %>% mutate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, "")))
acc2014 %>% mutate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
acc2014 %>% mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
mutate(TWAY_ID2 = na_if(TWAY_ID2, ""))
acc2014 %>% mutate(TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014 %>% mutate(TWAY_ID2 = na_if(TWAY_ID2, "")))
)
table(is.na(acc2014 %>% mutate(TWAY_ID2 = na_if(TWAY_ID2, ""))))
mutate(TWAY_ID2 = na_if(TWAY_ID2, ""))
mutate(acc2014$TWAY_ID2 = na_if(TWAY_ID2, ""))
mutate(acc2014$TWAY_ID2, TWAY_ID2 = na_if(TWAY_ID2, ""))
mutate(acc2014$, TWAY_ID2 = na_if(TWAY_ID2, ""))
mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, "")))
)
acc2014 %>% mutate(TWAY_ID2 = na_if(TWAY_ID2, ""))
X <- acc2014 %>% mutate(TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(X))
mutate(TWAY_ID2 = na_if(TWAY_ID2, ""))
mutate(acc2014$TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
mutate(TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
mutate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
x <- mutate(acc2014, TWAY_ID2 = na_if(acc2014$TWAY_ID2, ""))
x
table(is.na(x))
head(x)
head(x$TWAY_ID2)
table(is.na((x$TWAY_ID2))
)
acc2014 <- acc2014 %>% mutate(na_if(acc2014$TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
x <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(x$TWAY_ID2))
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
dim(acc2014)
dim(acc2015)
?colnames()
?%in%
colnames(acc2014) %in% colnames(acc2015)
colnames(acc2015) %in% colnames(acc2014)
colnames(acc2014)
colnames(acc2015)
acc2015 <- read_csv(dir()[[1]])
acc2014 <- read_sas(dir()[[2]])
getwd()
dir()
getwd()
setwd("./Github/data_viz_works/DV-assignment1")
acc2015 <- read_csv(dir()[[1]])
acc2014 <- read_sas(dir()[[2]])
dir()
getwd()
setwd("./Github/data_viz_works/DV-assignment1")
acc2015 <- read_csv(dir()[[1]])
acc2014 <- read_sas(dir()[[2]])
setwd("./Github/data_viz_works/DV-assignment1")
setwd("./DV-assignment1")
dir()
acc2015 <- read_csv(dir()[[1]])
acc2014 <- read_sas(dir()[[2]])
class(acc2014)
class(acc2015)
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
dim(acc2014)
dim(acc2015)
colnames(acc2014) %in% colnames(acc2015)
colnames(acc2015) %in% colnames(acc2014)
printcolnames(acc2014) %in% colnames(acc2015)
if(colnames(acc2014) %in% colnames(acc2015) == FALSE) {print(colnames(acc2014))}
setdiff(colnames(acc2014), colnames(acc2015))
setdiff(colnames(acc2013), colnames(acc2014))
setdiff(colnames(acc2015), colnames(acc2014))
bind_rows()
?bind_rows()
bind_rows(acc2014, acc2015)
count(bind_rows(acc2014, acc2015))
acc = bind_rows(acc2014, acc2015)
count(acc)
count(acc.RUR_URB)
count(acc$RUR_URB)
count(table(acc$RUR_URB))
table(acc$RUR_URB))
table(acc$RUR_URB)
ftable(acc$RUR_URB)
table(acc$RUR_URB, exclude=NULL)
(dir()[[2]])
dir()
count(acc2014)
count(acc2014, RUR_URB)
count(acc, RUR_URB)
dir
dir()
fips = read_csv("fips.csv")
glimpse(fips)
?tostring
?toString
?mutate
?toString
mutate(acc, STATE = toString(STATE))
?mutate
mutate(acc, STATE = toString(STATE), COUNTY = toString(COUNTY))
acc <- mutate(acc, STATE = toString(STATE), COUNTY = toString(COUNTY))
class(acc$STATE, acc$COUNTY)
class(acc$STATE)
class(acc$COUNTY)
head(acc$STATE)
head(acc)
acc = bind_rows(acc2014, acc2015)
head(acc)
mutate(STATE = toString(STATE), COUNTY = toString(COUNTY))
acc %>% mutate(STATE = toString(STATE), COUNTY = toString(COUNTY))
head(acc %>% mutate(STATE = toString(STATE), COUNTY = toString(COUNTY)))
mutate(acc, STATE = toString(STATE))
head(acc$STATE)
acc
head(acc$STATE)
head(acc$COUNTY)
mutate(acc, STATE = toString(STATE))
head(acc$STATE)
class(acc$STATE)
x <- mutate(acc, STATE = toString(STATE))
x
head(x$STATE)
x <- mutate(acc, as.character(STATE))
x
x
class(x$STATE)
mutate(acc, as.character(STATE))
acc = bind_rows(acc2014, acc2015)
acc
acc$STATE
class(acc$STATE)
class(as.character(acc$STATE))
x <- mutate(acc, as.character(STATE))
class(x$STATE)
class(x)
x
y <- as.character(STATE))
y <- as.character(STATE)
y <- as.character(acc$STATE)
y
acc$STATE <- as.character(acc$STATE)
acc$STATE
acc
?str_pad()
str_pad("1", 3, "left", "0")
str_pad(acc$STATE, 2, "left", "0")
acc$STATE <- str_pad(acc$STATE, 2, "left", "0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, "left", "0")
acc
?rename()
x
rename(x$STATE, "SteateFIPSCode")
rename(acc$STATE, "SteateFIPSCode")
?rename()
?rename()
rename(x, c("STATE" = "StateFIPSCode"))
rename(acc, c("STATE" = "StateFIPSCode"))
rename(acc, relpace = c("STATE" = "StateFIPSCode"))
acc <- rename(acc, c("STATE" = "StateFIPSCode"))
acc <- rename(acc, c(STATE = "StateFIPSCode"))
acc <- rename(acc, c(STATE = StateFIPSCode))
acc <- plyr::rename(acc, c(STATE = "StateFIPSCode"))
acc
acc <- plyr::rename(acc, c(COUNTY = "CountyFIPSCode"))
acc
colnames(acc)
head(acc$StateFIPSCode, acc$CountyFIPSCode)
head(acc$StateFIPSCode, CountyFIPSCode)
head((acc$StateFIPSCode, acc$CountyFIPSCode))
head((acc$StateFIPSCode acc$CountyFIPSCode))
head(acc$StateFIPSCode, acc$CountyFIPSCode)
head(acc$(StateFIPSCode, CountyFIPSCode))
?left_join()
x <- left_join(acc, fips)
x
colnames(x)
head(x$StateName)
count(x)
acc <- left_join(acc, fips)
count(x)
count(acc)
summarize(acc$FATALS)
summarize(c(acc$FATALS))
?summarize
summarize(acc)
acc
class(acc)
plyr::summarize(acc)
plyr::summarize(acc$FATALS)
plyr::summarize(acc, FATALS)
?group_by
group_by(acc, STATE, FATALS)
group_by(acc, StateFIPSCode, FATALS)
summarize(group_by(acc, StateFIPSCode, FATALS))
summarize(group_by(acc$FATALS, StateFIPSCode))
summarize(group_by(acc, StateFIPSCode, FATALS))
summarize(group_by(acc, StateFIPSCode))
df <- group_by(acc, StateFIPSCode)
df
summarize(group_by(acc, StateFIPSCode))
summarize(group_by(acc, StateFIPSCode, FATALS))
glimpse(df)
group_by(acc, StateName, YEAR)
summarize(group_by(acc, StateName, YEAR)TOTAL = sum(FATALS))
summarize(group_by(acc, StateName, YEAR))
summarize(group_by(acc, StateName, YEAR) n=sum(FATALS))
summarize(group_by(acc, StateName, YEAR), n=sum(FATALS))
summarize(group_by(acc, StateName, YEAR==2014), total=sum(FATALS))
summarize(group_by(acc, StateName, YEAR), total=sum(FATALS))
summarize(group_by(acc, StateName, YEAR), sum(FATALS))
agg <- summarize(group_by(acc, StateName, YEAR), TOTAL = sum(FATALS))
agg
spread(agg)
?spread()
agg %>% spread(YEAR, TOTAL)
agg_wide <- agg %>% spread(YEAR, TOTAL)
agg_wide
colnames(agg_wide) <- c("StateName", '"2014"', '"2015"')
agg_wide
mutate(Diff_perc = ("2014" - "2015") / "2014")
mutate(agg_wide, Diff_perc = ("2014" - "2015") / "2014")
colnames(agg_wide)
colnames(agg_wide) <- c("StateName", 'Y2014', 'Y2015')
mutate(agg_wide, Diff_perc = (Y2014 - Y2015) / Y2014)
arrange(agg_wide, Diff_perc)
?arrange()
arrange(agg_wide, Diff_perc)
agg_wide
agg_wide <- mutate(agg_wide, Diff_perc = (Y2014 - Y2015) / Y2014)
arrange(agg_wide, Diff_perc)
agg_wide <- mutate(agg_wide, Diff_perc = (Y2015 - Y2014) / Y2014)
arrange(agg_wide, Diff_perc)
arrange(agg_wide, Diff_perc, desc())
arrange(agg_wide, Diff_perc=desc())
arrange(agg_wide, desc(Diff_perc))
filter(agg_wide, Diff_perc > .15 & is.na(StateName))
filter(agg_wide, Diff_perc > .15 & is.na(!StateName))
filter(agg_wide, Diff_perc > .15 & !is.na(StateName))
glimpse(agg_wide)
agg <- filter(agg_wide, Diff_perc > .15 & !is.na(StateName))
glimpse(agg)
acc %>% group_by(StateName, YEAR), TOTAL = sum(FATALS)
acc %>% group_by(StateName YEAR), TOTAL = sum(FATALS)
acc
acc %>% group_by(StateName, YEAR), TOTAL = sum(FATALS))
acc %>% group_by(StateName, YEAR)
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS))
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS))
%>% spread(YEAR, TOTAL)
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL)
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% colnames(c("StateName", "Y2014", "Y2015"))
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% colnames(x=c("StateName", "Y2014", "Y2015"))
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% mutate(agg_wide, Diff_perc = (2015 - 2014) / 2014)
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% mutate(Diff_perc = (2015 - 2014) / 2014)
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-(c("StateName", "Y2014", "Y2015")`
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")
)
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015"))
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")) %>% mutate(Diff_perc = (Y2015 - Y2014) / Y2014)
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")) %>% mutate(Diff_perc = (Y2015 - Y2014) / Y2014) %>% arrange(desc(Diff_perc))
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")) %>% mutate(Diff_perc = (Y2015 - Y2014) / Y2014) %>% arrange(desc(Diff_perc)) %>% filter(Diff_perc >.15 and !is.na(StateName))
acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")) %>% mutate(Diff_perc = (Y2015 - Y2014) / Y2014) %>% arrange(desc(Diff_perc)) %>% filter(Diff_perc >.15 & !is.na(StateName))
agg <- acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")) %>% mutate(Diff_perc = (Y2015 - Y2014) / Y2014) %>% arrange(desc(Diff_perc)) %>% filter(Diff_perc >.15 & !is.na(StateName))
glimpse(agg)
getwd()
# 1. Install required packages
install.packages("easypackages")
library(easypackages)
packages("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
# 2. Load data
getwd()
setwd("./DV-assignment1")
dir()
acc2015 <- read_csv(dir()[[1]])
acc2014 <- read_sas(dir()[[2]])
class(acc2014)
class(acc2015)
# 3. Combine two datasets
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
dim(acc2014)
dim(acc2015)
colnames(acc2014) %in% colnames(acc2015)
colnames(acc2015) %in% colnames(acc2014)
# 3.1 id the unmatched columns
setdiff(colnames(acc2014), colnames(acc2015))
# note: "ROAD_FNC" not in acc2015
setdiff(colnames(acc2015), colnames(acc2014))
# note: "RUR_URB"  "FUNC_SYS" "RD_OWNER" not in acc2014
acc = bind_rows(acc2014, acc2015)
count(acc, RUR_URB) # or, table(acc$RUR_URB, exclude=NULL)
# note: There are 30056 NA because "The output of bind_rows will contains a
# column if that column appears in any of the inputs". RUR_URB was not in acc2014,
# so all 30056 observations of acc2014 have NA for it.
# 4. Merge on another data source
fips = read_csv("fips.csv")
glimpse(fips)
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
acc$STATE <- str_pad(acc$STATE, 2, "left", "0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, "left", "0")
acc <- plyr::rename(acc, c(STATE = "StateFIPSCode"))
acc <- plyr::rename(acc, c(COUNTY = "CountyFIPSCode"))
acc <- left_join(acc, fips)
# 5. Exploratory data analysis
agg <- summarize(group_by(acc, StateName, YEAR), TOTAL = sum(FATALS))
agg_wide <- agg %>% spread(YEAR, TOTAL)
colnames(agg_wide) <- c("StateName", 'Y2014', 'Y2015')
agg_wide <- mutate(agg_wide, Diff_perc = (Y2015 - Y2014) / Y2014)
agg_wide <- arrange(agg_wide, desc(Diff_perc))
agg <- filter(agg_wide, Diff_perc > .15 & !is.na(StateName))
# doing the above with "%>%" and only one "<-"
agg <- acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")) %>% mutate(Diff_perc = (Y2015 - Y2014) / Y2014) %>% arrange(desc(Diff_perc)) %>% filter(Diff_perc >.15 & !is.na(StateName))
glimpse(agg)
install.packages("easypackages")
# 1. Install required packages
install.packages("easypackages")
library(easypackages)
packages("readr", "haven", "dplyr", "tidyr", "stringr", "ggplot2")
# 2. Load data
getwd()
setwd("./DV-assignment1")
dir()
acc2015 <- read_csv(dir()[[1]])
acc2014 <- read_sas(dir()[[2]])
class(acc2014)
class(acc2015)
# 3. Combine two datasets
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
dim(acc2014)
dim(acc2015)
colnames(acc2014) %in% colnames(acc2015)
colnames(acc2015) %in% colnames(acc2014)
# 3.1 id the unmatched columns
setdiff(colnames(acc2014), colnames(acc2015))
# note: "ROAD_FNC" not in acc2015
setdiff(colnames(acc2015), colnames(acc2014))
# note: "RUR_URB"  "FUNC_SYS" "RD_OWNER" not in acc2014
acc = bind_rows(acc2014, acc2015)
count(acc, RUR_URB) # or, table(acc$RUR_URB, exclude=NULL)
# note: There are 30056 NA because "The output of bind_rows will contains a
# column if that column appears in any of the inputs". RUR_URB was not in acc2014,
# so all 30056 observations of acc2014 have NA for it.
# 4. Merge on another data source
fips = read_csv("fips.csv")
glimpse(fips)
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
acc$STATE <- str_pad(acc$STATE, 2, "left", "0")
acc$COUNTY <- str_pad(acc$COUNTY, 3, "left", "0")
acc <- plyr::rename(acc, c(STATE = "StateFIPSCode"))
acc <- plyr::rename(acc, c(COUNTY = "CountyFIPSCode"))
acc <- left_join(acc, fips)
# 5. Exploratory data analysis
agg <- summarize(group_by(acc, StateName, YEAR), TOTAL = sum(FATALS))
agg_wide <- agg %>% spread(YEAR, TOTAL)
colnames(agg_wide) <- c("StateName", 'Y2014', 'Y2015')
agg_wide <- mutate(agg_wide, Diff_perc = (Y2015 - Y2014) / Y2014)
agg_wide <- arrange(agg_wide, desc(Diff_perc))
agg <- filter(agg_wide, Diff_perc > .15 & !is.na(StateName))
# doing the above with "%>%" and only one "<-"
agg <- acc %>% group_by(StateName, YEAR) %>% summarize(TOTAL = sum(FATALS)) %>% spread(YEAR, TOTAL) %>% `colnames<-`(c("StateName", "Y2014", "Y2015")) %>% mutate(Diff_perc = (Y2015 - Y2014) / Y2014) %>% arrange(desc(Diff_perc)) %>% filter(Diff_perc >.15 & !is.na(StateName))
glimpse(agg)
