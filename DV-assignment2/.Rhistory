install.packages("swirl")
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
Months(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(, t1, units = 'days'))
difftime(Sys.time(), t1, units = 'days'))
difftime(Sys.time(), t1, units = 'days')
install.packages("foreign")
spssdata <- read.spss("C:/temp/spssfile.sav")
statadata <- read.dta("C:/temp/statafile.dta")
sasdata <- read.xport("C:/temp/sasfile.xpt")
help(dta)
help(??dta)
install.packages("foreign")
library(foreign)
library(foreign)
help(package=foreign)
help(package=foreign)
wd
pwd
ls
read.dta
read.dta
project1.dta <- read.dta
print project1.dta
print(project1.dta)
View(project1.dta)
View(project1.dta)
View(project1.dta)
View(project1.dta)
read.dta(project1.dta)
project1.dta <- read.dta
describe project1.dta
View(project1.dta)
project1 <- read.table("~/Desktop/project1.dta", quote="\"")
View(project1)
View(project1)
View(project1.dta)
View(project1)
print(project1)
describe(project1)
View(project1)
library(haven)
PP346_injunction_data <- read_dta("~/Desktop/PP346_injunction_data.dta")
View(PP346_injunction_data)
attr(PP346_injunction_data, "variable.labels")
install.packages(readr, haven, dplyr, tidyr, stringr, ggplot2)
install.packages(readr, haven, dp1yr, tidyr, stringr, ggplot2)
install.packages(readr, haven, tidyr, stringr, ggplot2)
install.packages(readr, haven, stringr, ggplot2)
install.packages(stringr)
installed.packages()
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr", "tidyr", "ggplot2")
install.packages("dplyr")
library(dplyr)
install.packages("tidyr")
install.packages("ggplot2")
library(haven)
library(haven, readr, dplyr, tidyr, stringr, ggplot2)
library(tidyr)
install.packages(rmarkdown)
intall.packages("rmarkdown")
install.packages("rmarkdown")
rmarkdown::render(input = "script.R")
dir()
setwd("./GitHub/data_viz_works/")
dir()
setwd("./DV-assignment2/")
DIR()
dir()
setwd("../DV-assignment1/")
dir()
rmarkdown::render("script.R")
dir()
setwd("../DV-assignment2/")
dir()
ls
install.packages("easypackages")
library(easypackages)
packages("tidyverse","rmarkdown","readr", "haven", "dplyr", "stringr", "ggplot2")
install.packages("easypackages")
coinbase = read_csv("coinbaseUSD_1-min_data_2014-12-01_to_2017-05-31.csv")
packages("tidyverse","rmarkdown","readr", "haven", "dplyr", "stringr", "ggplot2")
library(easypackages)
packages("tidyverse","rmarkdown","readr", "haven", "dplyr", "stringr", "ggplot2")
coinbase = read_csv("coinbaseUSD_1-min_data_2014-12-01_to_2017-05-31.csv")
install.packages("anytime")
library(anytime)
colnames(coinbase)
head(coinbase)
coinbase <- mutate(coinbase, Timestamp = anytime(Timestamp))
head(coinbase)
# install dependencies
install.packages("easypackages")
library(easypackages)
packages("anytime","tidyverse","rmarkdown","readr", "haven", "dplyr", "stringr", "ggplot2")
# import data
coinbase = read_csv("coinbaseUSD_1-min_data_2014-12-01_to_2017-05-31.csv")
# install dependencies
install.packages("easypackages")
library(easypackages)
packages("anytime","tidyverse","rmarkdown","readr", "haven", "dplyr", "stringr", "ggplot2")
# import data
coinbase = read_csv("coinbaseUSD_1-min_data_2014-12-01_to_2017-05-31.csv")
# convert unix timestamp to human-readable date & time
coinbase <- mutate(coinbase, Timestamp = anytime(Timestamp))
head(coinbase)
ggplot(coinbase, aes(close)) +
geom_density()
ggplot(coinbase, aes(Close)) +
geom_density()
ggplot(coinbase, aes(Close)) +
geom_line()
ggplot(coinbase, aes(Timestamp, Close)) +
geom_line()
ggplot(coinbase, aes(Close)) +
geom_density()
ggplot(data=coinbase, aes(x=Close))
ggplot(data=coinbase, aes(x=Close)) + geom_line()
ggplot(coinbase, aes(Close)) +
geom_density()
ggplot(coinbase, aes(Close)) +
geom_point()
ggplot(coinbase, aes(x=Close, y=timestamp())) +
geom_point()
##------ Sun Oct  8 20:52:07 2017 ------##
##------ Sun Oct  8 20:52:07 2017 ------##
ggplot(coinbase, aes(x=Close, y=Timestamp())) +
geom_point()
ggplot(coinbase, aes(x=Close, y=Timestamp) +
geom_point()
)
head(coinbase)
Class(coinbase$Timestamp)
Classtype(coinbase$Timestamp)
classtype(coinbase$Timestamp)
class(coinbase$Timestamp)
coinbase = read_csv("coinbaseUSD_1-min_data_2014-12-01_to_2017-05-31.csv")
ggplot(data=coinbase) + geom_line(aes(x=Timestamp, y=Close))
?anytime
with(coinbase[(coinbase$Close < 100)], plot(Close, Timestamp))
coinbase[coinbase$Close < 100]
head(coinbase[coinbase$Close < 100])
head(coinbase)
?anytime
ggplot(data=coinbase) + geom_line(aes(x=Timestamp, y="`Volume_(Currency)`"))
View(coinbase)
ggplot(data=coinbase) + geom_line(aes(x=Timestamp, y=Close, color=`Volume_(BTC)`))
ggplot(data=coinbase) + geom_line(aes(x=Timestamp, y=Close, color=`Volume_(Currency)`))
btcn = read_csv("btcnCNY_1-min_data_2012-01-01_to_2017-05-31.csv")
btcn = read_csv("btcnCNY_1-min_data_2012-01-01_to_2017-05-31.csv")
ggplot(data=btcn) + geom_line(aes(x=Timestamp, y=Close, color=`Volume_(Currency)`))
dir()
